git으로 버전 관리하기
1. local repository 만들기
    1. cmd 혹은 terminal로 local repository로 만들고싶은 
    폴더로 이동하기
        cs 명령어를 활용해서 이동
        ex) cd "폴더 이름/폴더이름/폴더이름"

        ..은 상위폴더 의미
        ex) cd ../../폴더1


    vusual studio code terminal 활용하기
        상단 Terminal 탭 New Terminal
    
        vusual studio code terminal 종료하기
        terminal 창 쓰레기통 아이콘 클릭

    windows 사용자 : git bush here
        원하는 폴더로 들어가서 마우스 우클릭
        git bash here 클릭

    terminal, cmd, git bash 사용이 완료가 되면
    잘 종료시켜줘야한다

    2. git init
        git init 명령어를 실행하면 해당 폴더가 버전관리 할 수 있는 폴더로 변경된다
        .git 이라는 폴더가 새롭게 생성되면 성공
        .git 은 숨김폴더로서 안보이게 설정되어 있다
        윈도우의 경우 파일 탐색기 보기 > 숨긴항목보기 체크해야한다

        .git 폴더 속에는 버전관리를 위한 폴더와 파일들이 들어있으며
        .git 폴더를 삭제하면 버전 관리를 할 수 있는 깃 저장소가 아닌 일반 폴더가 된다
        (이럴경우 다시 get init을 실행하면됨)

2. git stage에 수정사항 올리기

깃의 작동원리
    깃은 논리적으로 working tree / stage / reposition 로 나누어 파일을 관리한다

working tree
    실질적으로 내가 작업하는 작업공간
    작업공간에서 새롭게 만든 파일들은 기본적으로 git이 추적하지 못하는 상태(untracked)
    스테이지에 올라가지 않은 상태(unstage)

stage   
    파일을 stage에 올리는 방법(tracked 상태로 만드는법)
    git add 파일이름
    명령어 사용

    add 명령어가 적용된 파일들은 모두 tracked 상태가 되며 stage에 올라간 상태가됨
    이때 stage에 올라간 파일을 수정(추가, 삭제)했다면 add를 실행 했을때 당시와 
    다른 상태가된다 이를 인지하고 modified 상태가 되었다고 판단하며
    modified 된 상태는 tracked 상태지만 unstage 상태

git staus 
    git 저장소의 상태 확인

git add 파일이름
    해당 파일을 stage에 올려줘
    untracked(git 저장소 내에서 새롭게 만든 파일) 파일들은 tracked 상태로 변경되고,
    stage에 해당 내용들이 올라간다(stage 상태가 된다)

    파일 이름 자리에 *을 사용하면 모든을 의미한다.